# Uncomment to enable profiling (also line at end of file)
#zmodload zsh/zprof
# Setup zinit, downloading if needed
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [ ! -d "$ZINIT_HOME" ]; then
	mkdir -p "$(dirname $ZINIT_HOME)"
	git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi
source "${ZINIT_HOME}/zinit.zsh"

# Setup fzf
if [[ ! "$PATH" == *$HOME/.fzf/bin* ]]; then
  PATH="${PATH:+${PATH}:}$HOME/.fzf/bin"
fi
source <(fzf --zsh)

# Set PATH, should this be done in a .profile or .env or similar
if [[ ! "$PATH" == *$HOME/.local/bin* ]]; then
  PATH="${PATH:+${PATH}:}$HOME/.local/bin"
fi

# Load completions, only rebuild if the zcompdump file is older then 24 hours
autoload -Uz compinit
[ ! "$(find ~/.zcompdump -mtime 1)" ] || compinit
compinit -C
zinit cdreplay -q

# Must load AFTER compinit but before autosuggest and syntax-highlighting
zinit light Aloxaf/fzf-tab 

# Load other plugins
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-syntax-highlighting
zinit light zsh-users/zsh-completions
zinit light softmoth/zsh-vim-mode
zinit snippet OMZP::sudo
zinit snippet OMZP::dotenv
zinit snippet OMZP::colored-man-pages
# These seem to add a shitton of aliases that I'm not sure I can remember 
# maybe try them one by one and see if they're useful...
zinit snippet OMZP::git
#zinit snippet OMZP::aws
#zinit snippet OMZP::kubectl
#zinit snippet OMZP::npm
#zinit snippet OMZP::tmux
#zinit snippet OMZP::docker

# Configure history
HISTSIZE=5001
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUPE=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Configure vi mode
VIM_MODE_TRACK_KEYMAP=no # Disable all tracking of editing keymap, cursor styling, prompt indicators,
MODE_CURSOR_VIINS="#00ff00 blinking bar"
MODE_CURSOR_REPLACE="$MODE_CURSOR_VIINS #ff0000"
MODE_CURSOR_VICMD="green block"
MODE_CURSOR_SEARCH="#ff00ff steady underline"
MODE_CURSOR_VISUAL="$MODE_CURSOR_VICMD steady bar"
MODE_CURSOR_VLINE="$MODE_CURSOR_VISUAL #00ffff"

# Setup zoxide
eval "$(zoxide init --cmd cd zsh)"

# Completion stylings
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'
zstyle ':fzf-tab:complete:__zoxide_z:*' fzf-preview 'ls --color $realpath'

# Setup Oh My Posh prompt if installed
[[ ! -f ~/.local/bin/oh-my-posh ]] || eval "$(~/.local/bin/oh-my-posh init zsh --config $HOME/.config/ohmyposh/mcribbs.toml)"

# Keybindings
bindkey -v
bindkey "${terminfo[kcuu1]}" history-search-backward
bindkey "${terminfo[kcud1]}" history-search-forward

# Load aliases
source $HOME/.alias

# Setup nvm
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

# Setup pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac

# Setup Android dev paths
ANDROID_HOME="/home/mcribbs/Android/sdk"
ANDROID_SDK_ROOT="$ANDROID_HOME"
PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"
JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
PATH="$JAVA_HOME/bin:$PATH"

# Enable shell integration if in VSCode
[[ "$TERM_PROGRAM" == "vscode" ]] && . "$(code --locate-shell-integration-path zsh)"

# Start zellij if available and not in an ssh session or vscode
echo $TERM_PROGRAM
if command -v zellij >/dev/null 2>&1; then
  if [[ ! -n $SSH_TTY ]]; then
    if [[ "$TERM_PROGRAM" != "vscode" ]]; then
      ZELLIJ_AUTO_ATTACH=true
      ZELLIJ_AUTO_EXIT=true
      eval "$(zellij setup --generate-auto-start zsh)"
    fi
  fi
fi

# Print welcome message
source $HOME/.welcome

# Uncomment to enable profiling (also line at start of file)
#zprof
